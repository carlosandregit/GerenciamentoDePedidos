// <auto-generated />
using System;
using GerenciamentoDePedidosWebApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GerenciamentoDePedidosWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250508165056_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("c_p_f");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_cliente");

                    b.HasKey("IdCliente")
                        .HasName("pk_clientes");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasDatabaseName("ix_clientes_cpf");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_pedido");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPedido"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_pedido")
                        .HasDefaultValueSql("NOW()");

                    b.Property<decimal>("TotalCalculado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_calculado");

                    b.HasKey("IdPedido")
                        .HasName("pk_pedidos");

                    b.HasIndex("ClienteId");

                    b.ToTable("pedidos", (string)null);
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.PedidoProduto", b =>
                {
                    b.Property<int>("IdPedidoProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_pedido_produto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPedidoProduto"));

                    b.Property<DateTime>("DataDoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_do_pedido")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedido_id");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_unitario");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("IdPedidoProduto")
                        .HasName("pk_pedido_produtos");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("pedido_produtos", (string)null);
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_produto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduto"));

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao_produto");

                    b.Property<int>("Estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("estoque");

                    b.Property<decimal>("PrecoProduto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_produto");

                    b.HasKey("IdProduto")
                        .HasName("pk_produtos");

                    b.HasIndex("DescricaoProduto")
                        .HasDatabaseName("ix_produtos_descricao");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.UsuariosSistema", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("senha");

                    b.Property<Guid?>("TokenAcesso")
                        .HasColumnType("uuid")
                        .HasColumnName("token_acesso");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("IdUsuario")
                        .HasName("pk_usuarios_sistema");

                    b.HasIndex("Usuario")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_sistema_usuario");

                    b.ToTable("usuarios_sistema", (string)null);
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pedidos_clientes");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.PedidoProduto", b =>
                {
                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pedido_produtos_pedidos");

                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", "Produto")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pedido_produtos_produtos");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("PedidoProdutos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", b =>
                {
                    b.Navigation("PedidoProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
