// <auto-generated />
using System;
using GerenciamentoDePedidosWebApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GerenciamentoDePedidosWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250506185418_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", b =>
                {
                    b.Property<decimal>("IdCliente")
                        .HasColumnType("numeric");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.Property<decimal>("IdPedido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ClienteId")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalCalculado")
                        .HasColumnType("numeric");

                    b.HasKey("IdPedido");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.PedidoProduto", b =>
                {
                    b.Property<decimal>("PedidoId")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProdutoId")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DataDoPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("IdPedidoProduto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("PedidoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoProdutos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", b =>
                {
                    b.Property<decimal>("IdProduto")
                        .HasColumnType("numeric");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estoque")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoProduto")
                        .HasColumnType("numeric");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.UsuariosSistema", b =>
                {
                    b.Property<decimal>("IdUsuario")
                        .HasColumnType("numeric");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TokenAcesso")
                        .HasColumnType("uuid");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.ToTable("UsuariosSistema");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.PedidoProduto", b =>
                {
                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", "Produto")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("PedidoProdutos");
                });

            modelBuilder.Entity("GerenciamentoDePedidosWebApi.Domain.Entities.Produto", b =>
                {
                    b.Navigation("PedidoProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
